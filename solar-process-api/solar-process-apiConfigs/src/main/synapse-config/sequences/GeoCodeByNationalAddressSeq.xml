<?xml version="1.0" encoding="UTF-8"?>
<sequence name="GeoCodeByNationalAddressSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <propertyGroup>
        <property expression="get-property('query.param.buildingnumber')" name="buildingnumber" scope="default" type="STRING"/>
        <property expression="get-property('query.param.additionalnumber')" name="additionalnumber" scope="default" type="STRING"/>
        <property expression="get-property('query.param.language')" name="language" scope="default" type="STRING"/>
        <property expression="get-property('query.param.format')" name="format" scope="default" type="STRING"/>
        <property expression="get-property('query.param.zipcode')" name="zipcode" scope="default" type="STRING"/>
        <property expression="get-property('query.param.cityname')" name="CityName" scope="default" type="STRING"/>
        <property expression="get-property('query.param.streetname')" name="StreetName" scope="default" type="STRING"/>
        <property expression="get-property('query.param.encode')" name="encode" scope="default" type="STRING"/>
        <property expression="get-property('query.param.page')" name="page" scope="default" type="STRING"/>
        <property expression="translate(get-property('language'), ' ', '')" name="language" scope="default" type="STRING"/>
        <property expression="get-property('query.param.districtname')" name="DistrictName" scope="default" type="STRING"/>
    </propertyGroup>
    <filter regex="true" source="boolean($ctx:page)">
        <then/>
        <else>
            <property name="page" scope="default" type="STRING" value="1"/>
        </else>
    </filter>
    <propertyGroup>
        <property name="CommonLogFlowId" scope="default" type="STRING" value="GeoCodeByNationalAddress"/>
        <property name="CommonLogInQueue" scope="default" type="STRING" value="GET -/GeoCodeByNationalAddress"/>
        <property expression="get-property('MessageID')" group="3" name="CommonLogLoggingId" pattern="((urn|uuid):)*(.*)" scope="default" type="STRING"/>
        <property expression="get-property('correlation_id')" name="CommonLogLoggingId2" scope="default" type="STRING"/>
        <property name="CommonLogMessageType" scope="default" type="STRING" value="application/json"/>
        <property name="CommonLogOutQueue" scope="default" type="STRING" value="POST -/fetchByQuery"/>
    </propertyGroup>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <script language="js"><![CDATA[var log = mc.getServiceLog();
var buildingno=mc.getProperty("buildingnumber");
var additionalno=mc.getProperty("additionalnumber");
var zipcodenumber =mc.getProperty("zipcode");
var CityName =mc.getProperty("CityName");
var DistrictName=mc.getProperty("DistrictName");
var StreetName=mc.getProperty("StreetName");
var query="";
if(buildingno)
{
    var q1 = "+buildingno:\""+buildingno+"\"^5"
    query=query.concat(q1);
}
if(additionalno)
{
    var q1 = "+additionalno:\""+additionalno+"\"^5"
    query=query.concat(q1);
}
if(zipcodenumber)
{
    var q1 = "+zipcodenumber:\""+zipcodenumber+"\"^5"
    query=query.concat(q1);
}
if(CityName)
{
    var q1 = " CityArabicName:\""+CityName+"\"~4 CityEnglishName:\""+CityName+"\"~4"
    query=query.concat(q1);
}
if(StreetName)
{
    var q1 = " StreetArabicName:\""+StreetName+"\" StreetEnglishName:\""+StreetName+"\""
    query=query.concat(q1);
} if(DistrictName)
{
    var q1 = " DistrictArabicName:\""+DistrictName+"\" DistrictEnglishName:\""+DistrictName+"\""
    query=query.concat(q1);
}
log.info("this is the query****"+query);
mc.setProperty("query", query);]]></script>
    <payloadFactory media-type="json">
        <format>{&#xd;
    "Query": "$1",&#xd;
    "SolrObject": "NA",&#xd;
    "Language":"$2",&#xd;
    "RequestFrom": "GeoCodeByNationalAddress",&#xd;
    "start": $3,&#xd;
    "rows": 10&#xd;
}</format>
        <args>
            <arg evaluator="xml" expression="get-property('query')"/>
            <arg evaluator="xml" expression="$ctx:language"/>
            <arg evaluator="xml" expression="$ctx:page"/>
        </args>
    </payloadFactory>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <call>
        <endpoint key="SolarSystemApiEP"/>
    </call>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <filter regex="true" source="json-eval($.success)">
        <then>
            <log level="custom">
                <property name="EndpointStatus" value="true"/>
            </log>
        </then>
        <else>
            <log level="custom">
                <property name="EndpointStatus" value="false"/>
            </log>
        </else>
    </filter>
    <script key="conf:scripts/GeoCodebyNA.js" language="js"/>
    <property expression="json-eval($.success)" name="successStatus" scope="default" type="STRING"/>
    <switch source="$ctx:format">
        <case regex="xml">
            <propertyGroup>
                <property expression="json-eval($.Addresses)" name="Address" scope="default" type="STRING"/>
                <property expression="json-eval($.success)" name="success" scope="default" type="STRING"/>
                <property expression="json-eval($.statusdescription)" name="statusdescription" scope="default" type="STRING"/>
                <property expression="json-eval($.totalSearchResults)" name="totalSearchResults" scope="default" type="STRING"/>
                <property name="contentType" scope="default" type="STRING" value="application/xml"/>
                <property expression="json-eval($.result)" name="result" scope="default" type="STRING"/>
                <property expression="json-eval($.fullException)" name="fullException" scope="default" type="STRING"/>
                <property name="CommonLogMessageType" scope="default" type="STRING" value="application/xml"/>
            </propertyGroup>
            <payloadFactory media-type="json">
                <format>{&#xd;
"Addresses": {"Address":$1}&#xd;
}</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:Address"/>
                </args>
            </payloadFactory>
            <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
            <payloadFactory media-type="xml">
                <format>
                    <AddressOutPutParams xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <success>$2</success>
                        <statusdescription>$3</statusdescription>
                        <totalSearchResults>$4</totalSearchResults>
 $1
</AddressOutPutParams>
                </format>
                <args>
                    <arg evaluator="xml" expression="$body//jsonObject/Addresses"/>
                    <arg evaluator="xml" expression="$ctx:success"/>
                    <arg evaluator="xml" expression="$ctx:statusdescription"/>
                    <arg evaluator="xml" expression="$ctx:totalSearchResults"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="json">
            <propertyGroup>
                <property name="contentType" scope="default" type="STRING" value="application/json"/>
            </propertyGroup>
        </case>
        <default>
            <propertyGroup>
                <property name="contentType" scope="default" type="STRING" value="application/json"/>
            </propertyGroup>
        </default>
    </switch>
</sequence>
