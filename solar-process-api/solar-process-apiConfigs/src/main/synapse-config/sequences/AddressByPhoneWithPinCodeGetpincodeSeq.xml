<?xml version="1.0" encoding="UTF-8"?>
<sequence name="AddressByPhoneWithPinCodeGetpincodeSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <propertyGroup>
        <property expression="get-property('query.param.mobileno')" name="MobileNo" scope="default" type="STRING"/>
        <property expression="get-property('query.param.format')" name="format" scope="default" type="STRING"/>
        <property expression="get-property('query.param.encode')" name="encode" scope="default" type="STRING"/>
        <property expression="get-property('query.param.language')" name="language" scope="default" type="STRING"/>
    </propertyGroup>
    <propertyGroup>
        <property name="CommonLogFlowId" scope="default" type="STRING" value="GetPincode"/>
        <property name="CommonLogInQueue" scope="default" type="STRING" value="GET -/GetPincode"/>
        <property expression="get-property('MessageID')" group="3" name="CommonLogLoggingId" pattern="((urn|uuid):)*(.*)" scope="default" type="STRING"/>
        <property expression="get-property('correlation_id')" name="CommonLogLoggingId2" scope="default" type="STRING"/>
        <property name="CommonLogMessageType" scope="default" type="STRING" value="application/json"/>
        <property name="CommonLogOutQueue" scope="default" type="STRING" value="GET -/GetPincode"/>
    </propertyGroup>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <filter regex="true" source="boolean($ctx:MobileNo)">
        <then>
            <filter regex="^966([0-9]{9})$|^05([0-9]{10})$" source="$ctx:MobileNo">
                <then/>
                <else>
                    <filter regex="xml" source="$ctx:format">
                        <then>
                            <payloadFactory media-type="xml">
                                <format>
                                    <AddressByPhoneWithPincode xmlns="">
                                        <success>false</success>
                                        <statusdescription>please enter  valid mobile number</statusdescription>
                                    </AddressByPhoneWithPincode>
                                </format>
                                <args/>
                            </payloadFactory>
                            <propertyGroup>
                                <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
                                <property name="contentType" scope="default" type="STRING" value="application/xml"/>
                            </propertyGroup>
                            <loopback/>
                        </then>
                        <else/>
                    </filter>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
    "success": false,&#xd;
    "result": null,&#xd;
    "statusdescription": "please enter  valid mobile number",&#xd;
    "fullexception": null&#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                        <property name="contentType" scope="default" type="STRING" value="application/json"/>
                    </propertyGroup>
                    <loopback/>
                </else>
            </filter>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>{&#xd;
    "success": false,&#xd;
    "result": null,&#xd;
    "statusdescription": "please enter mobile number",&#xd;
    "fullexception": null&#xd;
}</format>
                <args/>
            </payloadFactory>
            <filter regex="xml" source="$ctx:format">
                <then>
                    <payloadFactory media-type="xml">
                        <format>
                            <AddressByPhoneWithPincode xmlns="">
                                <SendPincode>
                                    <success>false</success>
                                    <statusdescription>Please enter mobile number</statusdescription>
                                </SendPincode>
                            </AddressByPhoneWithPincode>
                        </format>
                        <args/>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
                        <property name="contentType" scope="default" type="STRING" value="application/xml"/>
                    </propertyGroup>
                    <loopback/>
                </then>
                <else/>
            </filter>
            <propertyGroup>
                <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                <property name="contentType" scope="default" type="STRING" value="application/json"/>
            </propertyGroup>
            <loopback/>
        </else>
    </filter>
    <payloadFactory media-type="json">
        <format>{&#xd;
    "MobileNo": $1&#xd;
}</format>
        <args>
            <arg evaluator="xml" expression="$ctx:MobileNo"/>
        </args>
    </payloadFactory>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <log level="full" separator="Beforecall*****************"/>
    <call>
        <endpoint key="SendPincodeEP"/>
    </call>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <filter regex="Sent Successfully" source="json-eval($.GenericResult.UserFriendlyEnglishMessage)">
        <then>
            <filter regex="xml" source="$ctx:format">
                <then>
                    <payloadFactory media-type="xml">
                        <format>
                            <AddressByPhoneWithPincode xmlns="">
                                <SendPincode>
                                    <ErrorCode>$1</ErrorCode>
                                    <ErrorFriendlyMessage>$2</ErrorFriendlyMessage>
                                    <Status>$3</Status>
                                    <SystemErrorMessage>$4</SystemErrorMessage>
                                    <PinCode>$5</PinCode>
                                    <SMSBody>$6</SMSBody>
                                </SendPincode>
                            </AddressByPhoneWithPincode>
                        </format>
                        <args>
                            <arg evaluator="json" expression="$.GenericResult.StatusCode"/>
                            <arg evaluator="json" expression="$.GenericResult.UserFriendlyEnglishMessage"/>
                            <arg evaluator="json" expression="$.ResponseData.isSent"/>
                            <arg evaluator="json" expression="$.GenericResult.TechnicalErrorMessage"/>
                            <arg evaluator="json" expression="$.PinCode"/>
                            <arg evaluator="json" expression="$.GenericResult.UserFriendlyArabicMessage"/>
                        </args>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
                        <property name="contentType" scope="default" type="STRING" value="application/xml"/>
                    </propertyGroup>
                    <loopback/>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{  &#xd;
	"ErrorCode": "$1",  &#xd;
	"ErrorFriendlyMessage": "$2",  &#xd;
	"Status": "$3",  &#xd;
	"SystemErrorMessage": "$4",&#xd;
	"PinCode": "$5",  &#xd;
	"SMSBody": "$6"&#xd;
}</format>
                        <args>
                            <arg evaluator="json" expression="$.GenericResult.StatusCode"/>
                            <arg evaluator="json" expression="$.GenericResult.UserFriendlyEnglishMessage"/>
                            <arg evaluator="json" expression="$.ResponseData.isSent"/>
                            <arg evaluator="json" expression="$.GenericResult.TechnicalErrorMessage"/>
                            <arg evaluator="json" expression="$.PinCode"/>
                            <arg evaluator="json" expression="$.GenericResult.UserFriendlyArabicMessage"/>
                        </args>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                        <property name="contentType" scope="default" type="STRING" value="application/json"/>
                    </propertyGroup>
                    <log level="full" separator="Afterpayload*********************"/>
                    <loopback/>
                </else>
            </filter>
        </then>
        <else>
            <filter regex="xml" source="$ctx:format">
                <then>
                    <payloadFactory media-type="xml">
                        <format>
                            <AddressByPhoneWithPincode xmlns="">
                                <SendPincode>
                                    <ErrorCode>OTP005</ErrorCode>
                                    <ErrorFriendlyMessage>Invalid submitted data</ErrorFriendlyMessage>
                                    <Status>false</Status>
                                    <SystemErrorMessage/>
                                </SendPincode>
                                <SMSBody/>
                            </AddressByPhoneWithPincode>
                        </format>
                        <args/>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
                        <property name="contentType" scope="default" type="STRING" value="application/xml"/>
                    </propertyGroup>
                    <loopback/>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{  &#xd;
	"ErrorCode": "OTP005",  &#xd;
	"ErrorFriendlyMessage": "Invalid Submitted Data",  &#xd;
	"Status": false,  &#xd;
	"SystemErrorMessage": "",  &#xd;
	"PinCode": null,  &#xd;
	"SMSBody": null  &#xd;
}</format>
                        <args/>
                    </payloadFactory>
                    <propertyGroup>
                        <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                        <property name="contentType" scope="default" type="STRING" value="application/json"/>
                    </propertyGroup>
                    <loopback/>
                </else>
            </filter>
        </else>
    </filter>
</sequence>
